> Should have FAQ Categories (ie. General, Payments, etc.)

The earlier implementation was using acts_as_tree and the nodes with no parent_id were parent nodes. I created a new migration for FAQ categories and wrote a data migration for creating FAQ categories from the existing data. Categories have a name and a priority. The priority defines how the categories are displayed. These are the current priorities.

I added category_id to Faq. Faq belongs_to FaqCategory and FaqCategory has_many faqs.

> Each FAQ should have an question and answer.

FAQs have question and answer and they are erb processed in the view.

> When displayed FAQ Categories and FAQs should be shown in an order as defined by the product manager

I added priority to faq. Within a category, faqs are sorted on their priority. Faqs have a default priority.

> FAQs and FAQ Categories should allow for ERB processing to correctly brand and customize for the current user.

Yes, they are erb processed.

> There should be a Top X FAQ list, which again should be shown in an order defined by the product manager

I created TopFaq which references faq and has a priority. The TopFaq priority is used to determine the display order. I created a data migration for seeding top faqs from the current data. The current implementation has top faqs hard coded in the view.

> Each FAQ should belong to a Branding
> Each FAQ should belong to a FAQ Category

In the current data migration, I made all faqs part of all brandings. The index controller pulls up faqs for the given branding(@branding.faqs and @branding.top_faqs), finds the categories(@categories = @faqs.map {|f| f.category }.uniq.sort_by {|c| c.priority.nil? ? FaqCategory::DEFAULT_PRIORITY : c.priority }) and hands it to the view which displays the categories and the faqs for the given category sorted by their priority.
